{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>PythonTestEngineer.co.uk - Craig West</p> <p></p> <ul> <li>[x] Write the press release</li> <li>[ ] Update the website</li> <li>[ ] Contact the media</li> </ul> <p>Gone camping!  Be back soon.</p> <p>That is so funny! </p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> <p>Info</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"#bash","title":"Bash","text":"<pre><code># Minimal makefile for Sphinx documentation\n#\n\n# You can set these variables from the command line, and also\n# from the environment for the first two.\nSPHINXOPTS    ?=\nSPHINXBUILD   ?= sphinx-build\nSOURCEDIR     = source\nBUILDDIR      = build\n\n# Put it first so that \"make\" without argument is like \"make help\".\nhelp:\n    @$(SPHINXBUILD) -M help \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n\n.PHONY: help Makefile\n\n# Catch-all target: route all unknown targets to Sphinx using the new\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n%: Makefile\n    @$(SPHINXBUILD) -M $@ \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n</code></pre>"},{"location":"#syntax_highlighting_example","title":"Syntax highlighting Example","text":"<pre><code>import flask\nimport flask_saml\n\napp = flask.Flask(__name__)\n\napp.config.update({\n    'SECRET_KEY': 'soverysecret',\n    'SAML_METADATA_URL': 'https://mymetadata.xml',\n})\nflask_saml.FlaskSAML(app)\n</code></pre>"},{"location":"#sample_layout","title":"Sample layout","text":"<pre><code>\u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 about.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 site\n    \u251c\u2500\u2500 404.html\n    \u251c\u2500\u2500 about\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 search_index.json\n    \u251c\u2500\u2500 sitemap.xml\n    \u2514\u2500\u2500 sitemap.xml.gz\n</code></pre>"},{"location":"craig/","title":"Index","text":""},{"location":"craig/#python_test_engineer","title":"Python Test Engineer","text":"<ul> <li>Degree in Chemistry, Oxford University.</li> <li>Former A+ PC Technician, Microsoft Certified Systems Engineer and Microsoft Certified SQL Server DBA.</li> <li>Former Business Information Architect.</li> <li>Qualified Accountant Technician and business owner.</li> <li>Experience with REST APIs, GraphQL, React, Vue, Web Components, Node, Docker</li> <li>Talks and workshops given at WordCamps, MeetUps and NDC. VIEW SPEAKING</li> </ul>"},{"location":"craig/#connect_with_me","title":"Connect with me","text":"<ul> <li>\ud83c\udf10 https://python-test-engineer.netlify.app/</li> <li>\ud83d\udceb mrcraigwest@hotmail.com</li> <li>\ud83d\udda5\ufe0f https://www.youtube.com/@iwswordpress/featured</li> </ul>"},{"location":"craig/#currently","title":"Currently...","text":"<p>I am developing a collated resource for Python Testing along with a range of test Suites with 'one click' set up. https://github.com/iwswordpress/generic-pytest-playwright-pytest-bdd-framework</p>"},{"location":"craig/#talks_and_workshops","title":"Talks and Workshops","text":"<p>A list of talks and workshops I have given: </p> <ul> <li> <p>TALK: Offline and instant websites, aka Progressive Web Apps - AsyncJS, Brighton, September 2021.</p> </li> <li> <p>LIGHTNING TALK: WordPress as a Micro Service to any framework - WordFest, July 2021.</p> </li> <li> <p>TALK: WP REST API and Web Components =&gt; 100% Internet - WordCamp Santa Clarita, July 2021.</p> </li> <li> <p>TALK: Web Components in WP, Gutenberg and as HTML plugins. - WordCamp North East Ohio May 2021.</p> </li> <li> <p>TALK: Leveraging the power or the WordPress REST API - WP Leeds April 2021</p> </li> <li> <p>WORKSHOP: WP REST API and you -&gt; Best Friends Forever workshop (90 mins) - WordCamp Greece April 2021 https://github.com/iwswordpress/WordCampGreece</p> </li> <li> <p>TALK: Web Components as Micro Apps - NDC London, Jan 2021</p> </li> <li> <p>TALK: Unifying frameworks with Web Components - Brighton AsyncJS, Nov 2020</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshop with NDC</p> </li> <li> <p>WORKSHOP: Web Components Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshope with NDC</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - Brighton WordUp June 2020</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Denver, June 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Kent, Ohio May 2020.</p> </li> <li> <p>TALK: What is the WP REST API and how can I use it to make forms and pages that don\u2019t need to do be reloaded? - WordUp Brighton May 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API and AJAX Forms - WordCamp Geneva March 2020 EVENT CANCELLED due to virus concerns </p> </li> <li> <p>TALK - WP-HTML: The marriage of WP and JS Frameworks for expansion, ubiquity and profit - WordCamp Vienna February 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API - WordCamp Vienna February 2020.</p> </li> <li> <p>TALK: Progressive Web Apps - Brighton WordUp November 2019.</p> </li> <li> <p>TALK: Decoupled WordPress (code along style) - WordCamp Dublin October 2019.</p> </li> <li> <p>TALK: JWT and Authentication - WPHooked London September 2019</p> </li> <li> <p>TALK: Decoupled WordPress and WP Components - WordCamp Brighton August 2019.</p> </li> </ul>"},{"location":"craig/#published_udemy_courses","title":"Published Udemy Courses","text":"<p>Udemy is a great learning platform and having sales at least once a month, courses can be purchased for ~ \u00a315/$15 USD.</p> <p>These have now been retired.</p> <ul> <li>WordPress REST API and AJAX Forms/Pages - DEMO https://www.youtube.com/watch?v=eubhbcGH_Ws&amp;t=6s (paid)</li> <li>Progressive Web Apps - DEMO https://www.youtube.com/watch?v=k_lHvNL0gkw (paid)</li> <li>WP-HTML: decoupling WordPress to any HTML platform using Web Components and the WP REST API. This also enables HTML plugins for non-WP Sites - https://www.udemy.com/course/powerful-html-pages-using-wordpress-component-architecture/ (free)</li> <li>Stylish Dynamic Web Forms with jQuery validation - https://www.udemy.com/course/ready-to-use-form-validation-templates-with-jquery/ (free)</li> </ul>"},{"location":"craig/#youtube_courses_-_developer_to_developer_courses","title":"YouTube Courses - Developer to Developer courses","text":"<p>These are video courses that cover work through official documents to help other developers, learn in public and show prosepective employers not just what I know but how I learn and how I communicate technical matters to others.</p> <p>There are also some specific videos explaining solutions to set ups other developers may encounter.</p> <ul> <li> <p> HIGHLY-FUNCTIONAL-WEBCOMPONENTS: A video course based on the workshop I gave at NDC Oslo June 2020 - https://www.youtube.com/watch?v=QC-JTqQTv2k&amp;list=PLsszRSbzjyvkQwzrJobroRl7z7MfSlePa </p> </li> <li> <p> WP Plugin Boilerplate:  I havea video series to explain WP Plugin Boilerplate using a scaffolded out project that demonstrates the use of MySQL, wp_nonce, REST API, forms and how to redirect pages to plugin templates to make the plugin theme independent. https://www.youtube.com/watch?v=lJ9ktD4JOfs&amp;list=PLsszRSbzjyvn-RQr4dEjrgnTne2HcJKee</p> </li> </ul>"},{"location":"craig/#volounteering","title":"Volounteering","text":"<p>I volounteer at Codebar.io in Brighton.</p>"},{"location":"craig/#outside_interests","title":"Outside interests","text":"<p>These include Community Kitchens, gym, occasional partner dancing and DIY.</p>"},{"location":"django_testing/about/","title":"MathJax","text":"<ul> <li>PyMdown - Material for MkDocs</li> </ul>"},{"location":"django_testing/about/#configure_mkdocsyml","title":"Configure <code>mkdocs.yml</code>","text":"<pre><code>markdown_extensions:\n    - mdx_math:\n        enable_dollar_delimiter: True\n</code></pre>"},{"location":"django_testing/about/#example_code","title":"Example code","text":"<pre><code>$$\nP\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha\n$$\n</code></pre>"},{"location":"django_testing/about/#example_rendering","title":"Example rendering","text":"<p>$$ P\\cdot Q = |P||Q|\\cos\\alpha $$</p>"},{"location":"django_testing/apps/","title":"Footnote","text":"<ul> <li>Footnotes - Material for MkDocs</li> </ul>"},{"location":"django_testing/apps/#configure_mkdocsyml","title":"Configure <code>mkdocs.yml</code>","text":"<pre><code>markdown_extensions:\n  - footnotes\n</code></pre>"},{"location":"django_testing/apps/#example","title":"Example","text":"<ul> <li>Footnote example 1.<sup>1</sup></li> <li>Footnote example 2.<sup>2</sup></li> </ul> <ol> <li> <p>One line\u00a0\u21a9</p> </li> <li> <p>First line Second line\u00a0\u21a9</p> </li> </ol>"},{"location":"django_testing/setup/","title":"CodeHilite","text":"<ul> <li>CodeHilite - Material for MkDocs</li> <li>Supported languages - Pygments</li> </ul>"},{"location":"django_testing/setup/#configure_mkdocsyml","title":"Configure <code>mkdocs.yml</code>","text":"<pre><code>markdown_extensions:\n  - codehilite\n</code></pre>"},{"location":"django_testing/tests/","title":"CodeHilite","text":"<ul> <li>CodeHilite - Material for MkDocs</li> <li>Supported languages - Pygments</li> </ul>"},{"location":"django_testing/tests/#configure_mkdocsyml","title":"Configure <code>mkdocs.yml</code>","text":"<pre><code>markdown_extensions:\n  - codehilite\n</code></pre>"},{"location":"hypothesis/","title":"About","text":"<p>Hypothesis Testing</p>"},{"location":"hypothesis/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> <p>Info</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"hypothesis/#bash","title":"Bash","text":"<pre><code># Minimal makefile for Sphinx documentation\n#\n\n# You can set these variables from the command line, and also\n# from the environment for the first two.\nSPHINXOPTS    ?=\nSPHINXBUILD   ?= sphinx-build\nSOURCEDIR     = source\nBUILDDIR      = build\n\n# Put it first so that \"make\" without argument is like \"make help\".\nhelp:\n    @$(SPHINXBUILD) -M help \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n\n.PHONY: help Makefile\n\n# Catch-all target: route all unknown targets to Sphinx using the new\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n%: Makefile\n    @$(SPHINXBUILD) -M $@ \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n</code></pre>"},{"location":"hypothesis/#syntax_highlighting_example","title":"Syntax highlighting Example","text":"<pre><code>import flask\nimport flask_saml\n\napp = flask.Flask(__name__)\n\napp.config.update({\n    'SECRET_KEY': 'soverysecret',\n    'SAML_METADATA_URL': 'https://mymetadata.xml',\n})\nflask_saml.FlaskSAML(app)\n</code></pre>"},{"location":"hypothesis/#sample_layout","title":"Sample layout","text":"<pre><code>\u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 about.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 site\n    \u251c\u2500\u2500 404.html\n    \u251c\u2500\u2500 about\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 search_index.json\n    \u251c\u2500\u2500 sitemap.xml\n    \u2514\u2500\u2500 sitemap.xml.gz\n</code></pre>"},{"location":"playwright_api/api/","title":"Hosting and Deployment","text":""},{"location":"playwright_api/api/#github_pages_and_github","title":"GitHub Pages and GitHub","text":"<ul> <li>Host source code on GitHub.</li> <li>Build and deploy with:<ul> <li><code>mkdocs gh-deploy</code></li> <li>GitHub Actions</li> </ul> </li> </ul>"},{"location":"playwright_api/api/#gitlab_pages_and_gitlab","title":"GitLab Pages and GitLab","text":"<ul> <li>Host source code on GitLab.</li> <li>Build and deploy with GitLab CI/CD.</li> </ul>"},{"location":"playwright_api/api/#netlify","title":"Netlify","text":"<p>Host source code on:</p> <ul> <li>GitHub</li> <li>GitLab</li> <li>BitBucket</li> </ul> <p>Build and deploy with Netlify.</p>"},{"location":"playwright_api/api/#aws_amplify_console","title":"AWS Amplify Console","text":"<p>Host source code on:</p> <ul> <li>GitHub</li> <li>GitLab</li> <li>BitBucket</li> <li>AWS CodeCommit</li> </ul> <p>Build and deploy with AWS Amplify Console.</p>"},{"location":"playwright_api/playwright/","title":"Host on Netlify","text":"<ul> <li>Demo site on Netlify (build &amp; deploy with Netlify)</li> </ul> <p>Create GitHub repository and deploy to Netlify with the following button in 1 min.</p> <p></p>"},{"location":"playwright_api/testing_playgrounds/","title":"Testing Playgrounds","text":"<ul> <li>AutomationStore</li> </ul>"},{"location":"pytest/docker/","title":"Start with Docker","text":""},{"location":"pytest/docker/#public_docker_image","title":"Public docker image","text":"<ul> <li>Package peaceiris/mkdocs-material</li> </ul>"},{"location":"pytest/docker/#docker-compose","title":"docker-compose","text":"<p>Here is an example docker-compose.yml Please check the latest tag before you go.</p> <pre><code>docker-compose up\n</code></pre> <p>Go to http://localhost:8000/</p>"},{"location":"pytest/mock_patch/","title":"Serve and open with invoke","text":""},{"location":"pytest/mock_patch/#invoke","title":"invoke","text":"<p>Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful &amp; clean feature set.</p> <ul> <li>pyinvoke/invoke: Pythonic task management &amp; command execution.</li> </ul>"},{"location":"pytest/mock_patch/#serve_and_open","title":"Serve and open","text":"<p>Run <code>mkdocs serve</code> and open browser automatically.</p> <pre><code>inv serve\n</code></pre> <p>Serving on localhost:8000</p> <pre><code># set IP and port\ninv serve --dev-addr 'localhost:5000'\n# set config file\ninv serve --config-file ./mkdocs-sample.yml\n</code></pre>"},{"location":"pytest/mock_patch/#show_all_tasks","title":"Show all tasks","text":"<pre><code>$ inv --list\nAvailable tasks:\n\n  serve    Serve site and open browser\n</code></pre> <p>Show task help.</p> <pre><code>$ inv serve --help\nUsage: inv[oke] [--core-opts] serve [--options] [other tasks here ...]\n\nDocstring:\n  Serve site and open browser\n\nOptions:\n  -c STRING, --config-file=STRING   Provide a specific MkDocs config\n  -d STRING, --dev-addr=STRING      IP address and port to serve documentation locally (default: localhost:8000)\n</code></pre> <p>Tasks are defined by tasks.py</p>"},{"location":"pytest/pytest/","title":"Start with pipenv","text":""},{"location":"pytest/pytest/#pipenv","title":"pipenv","text":"<p>Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world.</p> <ul> <li>pypa/pipenv: Python Development Workflow for Humans.</li> </ul>"},{"location":"pytest/pytest/#install_all_packages","title":"Install all packages","text":"<pre><code>pipenv sync --dev  # Installs all packages specified in Pipfile.lock.\n</code></pre>"},{"location":"pytest/pytest/#run_mkdocs","title":"Run MkDocs","text":"<pre><code>pipenv shell  # Spawns a shell within the virtualenv.\nmkdocs serve\n</code></pre> <p>Or, run <code>mkdocs</code> with <code>pipenv run</code></p> <pre><code>pipenv run mkdocs serve\n</code></pre>"},{"location":"pytest/pytest/#pipenv_run","title":"<code>pipenv run</code>","text":"<p>pipenv task are also defined by Pipfile</p> <pre><code>pipenv run version    # mkdocs --version\npipenv run help       # mkdocs --help\npipenv run inv serve  # inv serve\npipenv run serve      # mkdocs serve\npipenv run build      # mkdocs build\npipenv run deploy     # mkdocs gh-deploy\n</code></pre>"},{"location":"pytest/pytest_basic/","title":"Download boilerplate","text":""},{"location":"pytest/pytest_basic/#git_clone","title":"Git clone","text":"<pre><code>git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git\ncd mkdocs-material-boilerplate\n</code></pre>"},{"location":"pytest/pytest_basic/#download_zip","title":"Download zip","text":"<pre><code>wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/main.zip'\nunzip main.zip\ncd mkdocs-material-boilerplate-main\n</code></pre> <p>\ud83d\udc49 Click me to download zip</p>"},{"location":"pytest/tutorial_1/","title":"Start with pip (Anaconda, Miniconda)","text":"<pre><code>pip install -r requirements.txt\npip install -r requirements-dev.txt\n</code></pre> <p><code>inv</code> command is also available.</p>"},{"location":"pytest/tutorial_2/","title":"Start with pip (Anaconda, Miniconda)","text":"<pre><code>pip install -r requirements.txt\npip install -r requirements-dev.txt\n</code></pre> <p><code>inv</code> command is also available.</p>"}]}