{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#purpose","title":"Purpose","text":"<p>A set of 'one click install' test suites with increasing functionality, comprising templates, resources and YoutTube videos.</p>"},{"location":"#test_suites","title":"Test Suites","text":"<ul> <li>TEST_SUITE_00 A basic src folder wired to PyTest with custom logging and pytest-sugar console formating.#</li> <li>TEST_SUITE_02 as above but with a large number of ready made test templates demoing how to use PyTest along with templates for Mocking and Patching.</li> <li>TEST_SUITE_02 as above with API testing and Playwright e2e/functional testing.</li> <li>TEST_SUITE_03 as above with Behavior Driven testing that enables the use of native English test requiment files to be wired to PyTest. Enables all stakeholders to work on these 'feature' test files.</li> <li>TEST_SUITE_DJANGO is its own unique testing suite built from a range of sources.</li> <li>TEST_SUITE_HYPOTHESIS is a property based test suite that can provide templates and resources on how to use property based testing.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<ul> <li>Download the main repo and navigate to required TEST_SUITE. The Github repo for all these TEST_SUITES is here.</li> <li>Follow install instructions in README.md file of test suite.</li> </ul>"},{"location":"api_testing/api/","title":"API Testing","text":""},{"location":"api_testing/api/#about","title":"About","text":"<p>API ...</p>"},{"location":"api_testing/api/#install_test_suite_01","title":"Install TEST_SUITE_01","text":"<ul> <li>Host source code on GitLab.</li> <li>Build and deploy with GitLab CI/CD.</li> </ul>"},{"location":"api_testing/api/#tests","title":"Tests","text":"<p>Host source code on:</p> <ul> <li>GitHub</li> <li>GitLab</li> <li>BitBucket</li> </ul> <p>Build and deploy with Netlify.</p>"},{"location":"api_testing/api/#resources","title":"Resources","text":"<p>Host source code on:</p> <ul> <li>GitHub</li> <li>GitLab</li> <li>BitBucket</li> <li>AWS CodeCommit</li> </ul> <p>Build and deploy with AWS Amplify Console.</p>"},{"location":"api_testing/testing_playgrounds/","title":"Testing Playgrounds","text":"<ul> <li>AutomationStore</li> </ul>"},{"location":"craig/craig/","title":"About Craig","text":"<ul> <li> <p>PythonTestEngineer.co.uk</p> </li> <li> <p>Github CV</p> </li> <li> <p>Github Repo</p> </li> </ul> <p></p> Python Test Engineer - particulalry Django"},{"location":"craig/craig/#python_test_engineer","title":"Python Test Engineer","text":"<ul> <li>Degree in Chemistry, Oxford University.</li> <li>Former A+ PC Technician, Microsoft Certified Systems Engineer and Microsoft Certified SQL Server DBA.</li> <li>Former Business Information Architect.</li> <li>Qualified Accountant Technician and business owner.</li> <li>Experience with REST APIs, GraphQL, React, Vue, Web Components, Node, Docker</li> <li>Talks and workshops given at WordCamps, MeetUps and NDC.</li> </ul>"},{"location":"craig/craig/#talks_and_workshops","title":"Talks and Workshops","text":"<p>A list of talks and workshops I have given: </p> <ul> <li> <p>TALK: Offline and instant websites, aka Progressive Web Apps - AsyncJS, Brighton, September 2021.</p> </li> <li> <p>LIGHTNING TALK: WordPress as a Micro Service to any framework - WordFest, July 2021.</p> </li> <li> <p>TALK: WP REST API and Web Components =&gt; 100% Internet - WordCamp Santa Clarita, July 2021.</p> </li> <li> <p>TALK: Web Components in WP, Gutenberg and as HTML plugins. - WordCamp North East Ohio May 2021.</p> </li> <li> <p>TALK: Leveraging the power or the WordPress REST API - WP Leeds April 2021</p> </li> <li> <p>WORKSHOP: WP REST API and you -&gt; Best Friends Forever workshop (90 mins) - WordCamp Greece April 2021 </p> </li> <li> <p>TALK: Web Components as Micro Apps - NDC London, Jan 2021</p> </li> <li> <p>TALK: Unifying frameworks with Web Components - Brighton AsyncJS, Nov 2020</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshop with NDC</p> </li> <li> <p>WORKSHOP: Web Components Workshop (2hrs) - NDC Oslo June 2020 and a paid training workshope with NDC</p> </li> <li> <p>WORKSHOP: Progressive Web Apps Workshop (2hrs) - Brighton WordUp June 2020</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Denver, June 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API with AJAX Forms and Pages - WordCamp Kent, Ohio May 2020.</p> </li> <li> <p>TALK: What is the WP REST API and how can I use it to make forms and pages that don\u2019t need to do be reloaded? - WordUp Brighton May 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API and AJAX Forms - WordCamp Geneva March 2020 EVENT CANCELLED due to virus concerns </p> </li> <li> <p>TALK - WP-HTML: The marriage of WP and JS Frameworks for expansion, ubiquity and profit - WordCamp Vienna February 2020.</p> </li> <li> <p>WORKSHOP: WordPress REST API - WordCamp Vienna February 2020.</p> </li> <li> <p>TALK: Progressive Web Apps - Brighton WordUp November 2019.</p> </li> <li> <p>TALK: Decoupled WordPress (code along style) - WordCamp Dublin October 2019.</p> </li> <li> <p>TALK: JWT and Authentication - WPHooked London September 2019</p> </li> <li> <p>TALK: Decoupled WordPress and WP Components - WordCamp Brighton August 2019.</p> </li> </ul>"},{"location":"craig/craig/#published_udemy_courses","title":"Published Udemy Courses","text":"<p>Udemy is a great learning platform and having sales at least once a month, courses can be purchased for ~ \u00a315/$15 USD.</p> <p>These have now been retired.</p> <ul> <li>WordPress REST API and AJAX Forms/Pages - DEMO https://www.youtube.com/watch?v=eubhbcGH_Ws&amp;t=6s (paid)</li> <li>Progressive Web Apps - DEMO https://www.youtube.com/watch?v=k_lHvNL0gkw (paid)</li> <li>WP-HTML: decoupling WordPress to any HTML platform using Web Components and the WP REST API. This also enables HTML plugins for non-WP Sites - https://www.udemy.com/course/powerful-html-pages-using-wordpress-component-architecture/ (free)</li> <li>Stylish Dynamic Web Forms with jQuery validation - https://www.udemy.com/course/ready-to-use-form-validation-templates-with-jquery/ (free)</li> </ul>"},{"location":"craig/craig/#youtube_courses_-_developer_to_developer_courses","title":"YouTube Courses - Developer to Developer courses","text":"<p>These are video courses that cover work through official documents to help other developers, learn in public and show prosepective employers not just what I know but how I learn and how I communicate technical matters to others.</p> <p>There are also some specific videos explaining solutions to set ups other developers may encounter.</p> <ul> <li> <p>:heavy_check_mark: HIGHLY-FUNCTIONAL-WEBCOMPONENTS: A video course based on the workshop I gave at NDC Oslo June 2020 - https://www.youtube.com/watch?v=QC-JTqQTv2k&amp;list=PLsszRSbzjyvkQwzrJobroRl7z7MfSlePa </p> </li> <li> <p>:heavy_check_mark: WP Plugin Boilerplate:  I havea video series to explain WP Plugin Boilerplate using a scaffolded out project that demonstrates the use of MySQL, wp_nonce, REST API, forms and how to redirect pages to plugin templates to make the plugin theme independent. https://www.youtube.com/watch?v=lJ9ktD4JOfs&amp;list=PLsszRSbzjyvn-RQr4dEjrgnTne2HcJKee</p> </li> </ul>"},{"location":"craig/craig/#volounteering","title":"Volounteering","text":"<p>I volounteer at Codebar.io in Brighton.</p>"},{"location":"craig/craig/#outside_interests","title":"Outside interests","text":"<p>These include Community Kitchens, gym, occasional partner dancing and DIY.</p>"},{"location":"django_testing/about/","title":"Django Testing","text":""},{"location":"django_testing/about/#configure_mkdocsyml","title":"Configure <code>mkdocs.yml</code>","text":"<pre><code>markdown_extensions:\n    - mdx_math:\n        enable_dollar_delimiter: True\n</code></pre>"},{"location":"django_testing/about/#example_code","title":"Example code","text":""},{"location":"django_testing/apps/","title":"Apps","text":"<p>A compilation of various soruces in one project.</p>"},{"location":"django_testing/apps/#accountsposts","title":"accounts/posts","text":"<p>Based on a TDD video series of Django by Ssali Jonathan, I have extended it to include a PyTest folder as well as additional Django Unit Tests.</p>"},{"location":"django_testing/apps/#orm","title":"orm","text":"<p>Based on a TDD video series of Django by BugBytes, the code for the 18+ videos was not included in the repo so I have added files for each of the videos.</p> <p>It uses django-extensions, django-extensions, which offers the ability to run <code>manage.py runscript &lt;file_name_but_not_py_extension&gt;</code>, as if in a shell.</p> <p>Custom Commands to load data, SQL queries, transactions are also included and I have extended the code to include other useful utilities, as well as some relevant tests.</p> <p>I have added dditional tests from the Django Docs are also included.</p>"},{"location":"django_testing/apps/#stores","title":"stores","text":"<p>Based on Very Academy - Ecommerce, this offers variations on testing.</p>"},{"location":"django_testing/apps/#filemanager","title":"filemanager","text":"<p>A small app concerned with file uploading and management, this offers some more examples of testing with UnitTest and PyTest.</p>"},{"location":"django_testing/setup/","title":"CodeHilite","text":"<ul> <li>CodeHilite - Material for MkDocs</li> <li>Supported languages - Pygments</li> </ul>"},{"location":"django_testing/setup/#configure_mkdocsyml","title":"Configure <code>mkdocs.yml</code>","text":"<pre><code>markdown_extensions:\n  - codehilite\n</code></pre>"},{"location":"django_testing/tests/","title":"CodeHilite","text":"<ul> <li>CodeHilite - Material for MkDocs</li> <li>Supported languages - Pygments</li> </ul>"},{"location":"django_testing/tests/#configure_mkdocsyml","title":"Configure <code>mkdocs.yml</code>","text":"<pre><code>markdown_extensions:\n  - codehilite\n</code></pre>"},{"location":"hypothesis/hypothesis/","title":"Property based testing","text":"<p>When writing unit tests, it\u2019s hard to consider all possible edge cases and validate that your code works correctly.</p> <p>This is sometimes caught in production and a quick and speedy patch needs to be deployed. Only for a new bug to emerge later.</p> <p>There will always be cases you didn\u2019t consider, making this an ongoing maintenance job. Unit testing solves only some of these issues.</p> <p>Property-based testing is a complementary approach to traditional unit testing, where test cases are generated based on properties or constriants that the code should satisfy.</p> <p>Hypothesis addresses this limitation by automatically generating test data based on specified strategies.</p> <p>This allows developers to test a much broader range of inputs and outputs than traditional unit tests, increasing the likelihood of catching edge cases and unexpected behaviour.</p> <p>Hypothesis PyPi</p> <p>Pytest-with-Eric is  a very good resource.</p>"},{"location":"playwright_api/playwright/","title":"PlaywrightI Testing","text":""},{"location":"playwright_api/playwright/#about","title":"About","text":"<p>Playwright was created specifically to accommodate the needs of end-to-end testing. Playwright supports all modern rendering engines including Chromium, WebKit, and Firefox. Test on Windows, Linux, and macOS, locally or on CI, headless or headed with native mobile emulation.</p> <p>Playwright recommends using the official Playwright Pytest plugin to write end-to-end tests. It provides context isolation, running it on multiple browser configurations out of the box. Alternatively you can use the library to manually write the testing infrastructure with your preferred test-runner. The Pytest plugin utilizes the sync version of Playwright, there is also an async version accessible via the library.</p>"},{"location":"playwright_api/playwright/#install_test_suite_01","title":"Install TEST_SUITE_01","text":"<ul> <li>Host source code on GitLab.</li> <li>Build and deploy with GitLab CI/CD.</li> </ul>"},{"location":"playwright_api/playwright/#tests","title":"Tests","text":"<p>Host source code on:</p> <ul> <li>GitHub</li> <li>GitLab</li> <li>BitBucket</li> </ul> <p>Build and deploy with Netlify.</p>"},{"location":"playwright_api/playwright/#resources","title":"Resources","text":"<p>Host source code on:</p> <ul> <li>GitHub</li> <li>GitLab</li> <li>BitBucket</li> <li>AWS CodeCommit</li> </ul> <p>Build and deploy with AWS Amplify Console.</p>"},{"location":"playwright_api/testing_playgrounds/","title":"Testing Playgrounds","text":"<ul> <li>AutomationStore</li> </ul>"},{"location":"pytest/pytest/","title":"PyTest - TEST_SUITE_01","text":""},{"location":"pytest/pytest/#about","title":"About","text":"<p>Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world.</p> <ul> <li>pypa/pipenv: Python Development Workflow for Humans.</li> </ul>"},{"location":"pytest/pytest/#install","title":"Install","text":"<pre><code>pipenv sync --dev  # Installs all packages specified in Pipfile.lock.\n</code></pre>"},{"location":"pytest/pytest/#run_tests","title":"Run Tests","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam augue nisl, euismod et turpis a, ultrices rutrum mi. </p> <pre><code>pipenv shell  # Spawns a shell within the virtualenv.\nmkdocs serve\n</code></pre> <p>Or, run <code>mkdocs</code> with <code>pipenv run</code></p> <pre><code>pipenv run mkdocs serve\n</code></pre>"},{"location":"pytest/pytest/#tutorial_01","title":"Tutorial 01","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam augue nisl, euismod et turpis a, ultrices rutrum mi. Etiam pretium leo at mi fringilla, sit amet iaculis orci blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut libero placerat, sollicitudin ante non, molestie nisi. Cras at malesuada odio. Nullam libero quam, tempor in semper in, aliquam nec nulla. Sed luctus mi quis lorem faucibus fringilla. Morbi sit amet ante ac leo sollicitudin porta. Phasellus interdum nec neque eu placerat. Phasellus eget velit et tortor pretium vulputate vel vel nunc.</p> <p>In accumsan ligula lectus. Suspendisse potenti. Praesent tempor facilisis nisi, facilisis convallis eros tempor tempor. Donec quis urna pharetra nibh lobortis commodo sit amet a nunc. Suspendisse tempus lacinia leo at sollicitudin. In id vulputate orci, in pulvinar ligula. Morbi ac ex ut quam consequat tincidunt id eu elit. Mauris id nisi orci. Sed a velit enim. Aenean nec sem non purus vehicula maximus. Sed leo lorem, cursus sit amet massa ac, iaculis congue dui. Sed venenatis mollis dui eu pretium. ```</p>"},{"location":"pytest/pytest/#tutorial_02","title":"Tutorial 02","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam augue nisl, euismod et turpis a, ultrices rutrum mi. Etiam pretium leo at mi fringilla, sit amet iaculis orci blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut libero placerat, sollicitudin ante non, molestie nisi. Cras at malesuada odio. Nullam libero quam, tempor in semper in, aliquam nec nulla. Sed luctus mi quis lorem faucibus fringilla. Morbi sit amet ante ac leo sollicitudin porta. Phasellus interdum nec neque eu placerat. Phasellus eget velit et tortor pretium vulputate vel vel nunc.</p> <p>In accumsan ligula lectus. Suspendisse potenti. Praesent tempor facilisis nisi, facilisis convallis eros tempor tempor. Donec quis urna pharetra nibh lobortis commodo sit amet a nunc. Suspendisse tempus lacinia leo at sollicitudin. In id vulputate orci, in pulvinar ligula. Morbi ac ex ut quam consequat tincidunt id eu elit. Mauris id nisi orci. Sed a velit enim. Aenean nec sem non purus vehicula maximus. Sed leo lorem, cursus sit amet massa ac, iaculis congue dui. Sed venenatis mollis dui eu pretium.</p>"},{"location":"pytest/pytest/#mock_and_patch","title":"Mock and Patch","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam augue nisl, euismod et turpis a, ultrices rutrum mi. Etiam pretium leo at mi fringilla, sit amet iaculis orci blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut libero placerat, sollicitudin ante non, molestie nisi. Cras at malesuada odio. Nullam libero quam, tempor in semper in, aliquam nec nulla. Sed luctus mi quis lorem faucibus fringilla. Morbi sit amet ante ac leo sollicitudin porta. Phasellus interdum nec neque eu placerat. Phasellus eget velit et tortor pretium vulputate vel vel nunc.</p> <p>In accumsan ligula lectus. Suspendisse potenti. Praesent tempor facilisis nisi, facilisis convallis eros tempor tempor. Donec quis urna pharetra nibh lobortis commodo sit amet a nunc. Suspendisse tempus lacinia leo at sollicitudin. In id vulputate orci, in pulvinar ligula. Morbi ac ex ut quam consequat tincidunt id eu elit. Mauris id nisi orci. Sed a velit enim. Aenean nec sem non purus vehicula maximus. Sed leo lorem, cursus sit amet massa ac, iaculis congue dui. Sed venenatis mollis dui eu pretium.</p>"},{"location":"pytest/pytest/#resources","title":"Resources","text":"<ul> <li>PyTest Book</li> <li>Article</li> <li>Article</li> <li>Article</li> <li>Article</li> </ul>"},{"location":"pytest/pytest_basic/","title":"PyTest Basic","text":""},{"location":"pytest/pytest_basic/#set_up","title":"Set up","text":"<p>This uses TEST_SUITE_00 and is a simple wiring of src folder for your code and an tests folder for PyTest.</p> <p></p> <p>There is custom logging defined in pytest.ini that outputs to a <code>log</code> folder.</p> <ul> <li>move to <code>TEST_SUITE_00</code> folder and </li> </ul> <pre><code>pip install -r requirements_00.txt\n</code></pre>"},{"location":"pytest/pytest_basic/#sample_layout","title":"Sample layout","text":"<pre><code>\u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 about.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 site\n    \u251c\u2500\u2500 404.html\n    \u251c\u2500\u2500 about\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 search_index.json\n    \u251c\u2500\u2500 sitemap.xml\n    \u2514\u2500\u2500 sitemap.xml.gz\n</code></pre>"},{"location":"pytest/pytest_basic/#tests","title":"Tests","text":"<p>pytest-sugar has been installed to provide prettier console output.</p> <pre><code>python -m pytest \n\npython -m pytest -vs\n</code></pre> <p>\ud83d\udc49 Click me to download zip</p>"},{"location":"resources/articles/","title":"Articles","text":"<p>A set of 'one click install' test suites with increasing functionality, comprising templates, resources and YoutTube videos.</p>"},{"location":"resources/books/","title":"Books","text":"<p>A set of 'one click install' test suites with increasing functionality, comprising templates, resources and YoutTube videos.</p>"},{"location":"resources/videos/","title":"Videos","text":"<p>A set of 'one click install' test suites with increasing functionality, comprising templates, resources and YoutTube videos.</p>"}]}